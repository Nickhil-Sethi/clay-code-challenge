---
AWSTemplateFormatVersion: 2010-09-09

Description: Clay Diff Service Template

# Database stack creation prerequisite:  First create a VPC stack - see README for more info
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  
  DatabaseUser:
    Default: startupadmin
    Type: String
    Description: Database admin account name
    MinLength: 5
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters

  DatabasePassword:
    NoEcho: true
    Type: String
    Description: Database admin account password
    MinLength: 6
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Password must contain only alphanumeric characters

Resources:
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName:
          Ref: WebServerSecurityGroup
      GroupDescription: Frontend Access

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '8080'
        ToPort: '8080'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSecurityGroups: 
        - Ref: DBSecurityGroup
      Engine: postgres
      DBName: ClayDB
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      DBInstanceClass: db.t3.medium
      StorageType: gp2
      MultiAZ: false
      StorageEncrypted: false
      AllocatedStorage: 5

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: 't2.large'
      SecurityGroups: [!Ref 'WebServerSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: 'ami-0841edc20334f9287'

Outputs:
  Name:
    Description: RDS Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-Name

  RdsDbId:
    Description: RDS Database ID
    Value: !Ref Database
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseID

  RdsDbURL:
    Description: RDS Database URL
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseURL

  DbUser:
    Description: RDS Database admin account user
    Value: !Ref DatabaseUser
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseUser

  DbPassword:
    Description: RDS Database admin account password
    Value: !Ref DatabasePassword
    Export:
      Name: !Sub ${AWS::StackName}-DatabasePassword